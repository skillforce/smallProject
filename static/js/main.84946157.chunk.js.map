{"version":3,"sources":["components/App/app.module.css","components/AppInfo/AppInfo.module.css","components/AppFilter/AppFilter.module.css","components/EmployeesList/Employees.module.css","components/AppInfo/AppInfo.tsx","components/SearchPanel/SearchPanel.tsx","components/AppFilter/AppFilter.tsx","components/EmployeesListItem/EmployeesListItem.tsx","components/EmployeesList/EmployeesList.tsx","components/EmployeesAddForm/EmployeesAddForm.tsx","components/App/App.tsx","index.tsx"],"names":["module","exports","appInfo","s","AppInfo","props","widget","currentEmployees","forIncrease","className","SearchPanel","onSetInputValueHandler","e","onSetSearchText","currentTarget","value","searchText","this","type","placeholder","onChange","React","Component","btnGroupBlock","AppFilter","onSetFilter","filter","BtnFilter","label","map","t","i","onClick","btnFilter","EmployeesListItem","onSetEditMode","setState","editMode","state","isIncrease","forRaising","onSetPropHandler","id","name","salary","onDeleteEmployees","onSalaryChange","OnClickToggleHandler","prop","liClassName","salaryIsEdit","tabIndex","autoFocus","onBlur","onDoubleClick","style","minWidth","appList","EmployeesList","data","EmployeesAddForm","onSetInputNameValue","inputNameValue","onSetInputSalaryValue","inputSalaryValue","onAddNewEmployees","onAddEmployees","disabled","app","searchPanel","alertMsg","App","Math","random","toString","slice","EmployeesId","newEmployers","onSearchUserHandler","indexOf","onFilterUserHandler","Number","newFilter","newText","newSalary","length","searchData","afterFilter","tableView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84946157.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3LGZW\",\"searchPanel\":\"app_searchPanel__366ga\",\"alertMsg\":\"app_alertMsg__2PIdr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appInfo\":\"AppInfo_appInfo__1T4Vl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnGroupBlock\":\"AppFilter_btnGroupBlock__1EdKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appList\":\"Employees_appList__1nhSY\"};","import React from 'react';\r\nimport s from './AppInfo.module.css';\r\n\r\nconst {appInfo} = s\r\n\r\ntype AppInfoPropsType = {\r\n    widget: {\r\n        currentEmployees: number,\r\n        forIncrease: number\r\n    }\r\n}\r\n\r\nexport const AppInfo = (props: AppInfoPropsType) => {\r\n    const {widget} = props;\r\n    const {currentEmployees, forIncrease} = widget\r\n    return (\r\n        <div className={appInfo}>\r\n            <h1>Учет сотрудников в вкомпании </h1>\r\n            <h2>Общее число сотрудников: {currentEmployees} </h2>\r\n            <h3>Премию получат: {forIncrease} </h3>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\n\r\n\r\ntype SearchPanelPropsType = {\r\n    onSetSearchText: (newText: string) => void\r\n    searchText: string\r\n\r\n}\r\n\r\ntype SearchPanelStateType = {\r\n    inputValue: string\r\n}\r\n\r\n\r\nexport class SearchPanel extends React.Component<SearchPanelPropsType, SearchPanelStateType> {\r\n\r\n    onSetInputValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const {onSetSearchText} = this.props;\r\n        onSetSearchText(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {searchText} = this.props;\r\n\r\n        return (\r\n            <input type=\"text\"\r\n                   className=\"form-control search-input\"\r\n                   placeholder={'Найти сотрудника'}\r\n                   value={searchText}\r\n                   onChange={this.onSetInputValueHandler}/>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport s from './AppFilter.module.css';\r\nimport {FilterUsersType} from '../App/App';\r\n\r\nconst {btnGroupBlock} = s;\r\n\r\n\r\ntype AppFilterPropsType = {\r\n    onSetFilter: (newFilter: FilterUsersType) => void\r\n    filter: FilterUsersType\r\n}\r\n\r\n\r\nexport class AppFilter extends React.Component<AppFilterPropsType> {\r\n\r\n\r\n    render() {\r\n        const {onSetFilter, filter} = this.props\r\n\r\n        const btnGroup = [\r\n            {BtnFilter: 'none' as const, label: 'Все сотрудники'},\r\n            {BtnFilter: 'forIncrease' as const, label: ' Сотрудники на повышение'},\r\n            {BtnFilter: 'withBigSalary' as const, label: 'З/П больше 1000$'}\r\n        ]\r\n\r\n\r\n        const activeClassNameHandler = (btnFilter: FilterUsersType) => {\r\n            return filter === btnFilter ? 'btn btn-light' : 'btn btn-outline-light'\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <div className={btnGroupBlock}>\r\n                    {btnGroup.map((t,i) => <button key={i} onClick={() => onSetFilter(t.BtnFilter)}\r\n                                               className={activeClassNameHandler(t.BtnFilter)} type={'button'}>\r\n                        {t.label}\r\n                    </button>)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {ChangeEvent, Component} from 'react';\r\nimport './EmployeesListItem.css';\r\nimport {TogglePropType} from '../App/App';\r\n\r\n\r\nexport type EmployeesListItemPropsType = {\r\n    name: string\r\n    salary: string\r\n    id: string\r\n    isIncrease: boolean\r\n    forRaising: boolean\r\n    onDeleteEmployees: (EmployeesId: string) => void\r\n    onSetPropHandler: (id: string, prop: TogglePropType) => void\r\n    onSalaryChange: (newSalary: string, id: string) => void\r\n}\r\nexport type EmployeesListItemStateType = {\r\n    editMode: boolean\r\n}\r\n\r\n\r\nexport class EmployeesListItem extends Component<EmployeesListItemPropsType, EmployeesListItemStateType> {\r\n\r\n    constructor(props: EmployeesListItemPropsType) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: false\r\n        }\r\n\r\n    }\r\n\r\n    onSetEditMode = () => {\r\n        this.setState(({editMode}) => ({editMode: !editMode}))\r\n    }\r\n\r\n\r\n    render() {\r\n        const {editMode} = this.state\r\n        const {\r\n            isIncrease,\r\n            forRaising,\r\n            onSetPropHandler,\r\n            id,\r\n            name,\r\n            salary,\r\n            onDeleteEmployees,\r\n            onSalaryChange\r\n        } = this.props;\r\n\r\n        const OnClickToggleHandler = (prop: TogglePropType, id: string) => {\r\n            onSetPropHandler(id, prop)\r\n        }\r\n        const onChangeSalaryHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n            onSalaryChange(e.currentTarget.value, id)\r\n        }\r\n\r\n\r\n        const liClassName = `list-group-item d-flex justify-content-between ${isIncrease ? 'increase' : ''} ${forRaising ? 'like' : ''}`\r\n\r\n        const salaryIsEdit = editMode ?\r\n            <input tabIndex={0} autoFocus={true} onBlur={this.onSetEditMode} type=\"number\"\r\n                   className=\"list-group-item-input\" value={salary} onChange={onChangeSalaryHandler}/>\r\n            :\r\n            <span onDoubleClick={this.onSetEditMode} className=\"d-flex justify-content-center\"\r\n                  style={{minWidth: '300px'}}>{salary + ' ' + '$'}</span>\r\n\r\n\r\n        return (\r\n            <li className={liClassName}>\r\n                <span onClick={() => OnClickToggleHandler('isIncrease', id)} className=\"list-group-item-label\"\r\n                      style={{minWidth: '200px'}}>{name}</span>\r\n                {salaryIsEdit}\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button onClick={() => {\r\n                        OnClickToggleHandler('forRaising', id)\r\n                    }} type=\"button\"\r\n                            className=\"btn-cookie btn-sm \">\r\n                        <i className=\"fas fa-cookie\">\r\n\r\n                        </i>\r\n                    </button>\r\n\r\n                    <button onClick={() => onDeleteEmployees(id)} type=\"button\"\r\n                            className=\"btn-trash btn-sm \">\r\n                        <i className=\"fas fa-trash\">\r\n\r\n                        </i>\r\n                    </button>\r\n                    <i className=\"fas fa-star\">\r\n\r\n                    </i>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {EmployeesListItem} from '../EmployeesListItem/EmployeesListItem';\r\nimport s from './Employees.module.css';\r\nimport {StateDataType, TogglePropType} from '../App/App';\r\n\r\n\r\nconst {appList} = s;\r\n\r\n\r\nexport type EmployeesListPropsType = {\r\n    data: StateDataType[]\r\n    onDeleteEmployees: (EmployeesId: string) => void\r\n    onSetPropHandler: (id: string, prop: TogglePropType) => void\r\n    onSalaryChange: (newSalary: string, id: string) => void\r\n\r\n}\r\n\r\nexport const EmployeesList = (props: EmployeesListPropsType) => {\r\n    let {data, onDeleteEmployees, onSetPropHandler, onSalaryChange} = props;\r\n    return (\r\n        <div className={appList}>\r\n            <ul className=\"app-list list-group\">\r\n                {data.map(t => <EmployeesListItem onSalaryChange={onSalaryChange}\r\n                                                  onSetPropHandler={onSetPropHandler}\r\n                                                  onDeleteEmployees={onDeleteEmployees}\r\n                                                  key={t.id} {...t}/>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, {Component, FormEvent} from 'react';\r\nimport './EmployeesAddForm.css';\r\n\r\ntype EmployeesAddFormStateType = {\r\n    inputNameValue: string\r\n    inputSalaryValue: string\r\n}\r\n\r\ntype EmployeesFormPropsType = {\r\n    onAddEmployees: (name: string, salary: string) => void\r\n}\r\n\r\n\r\nexport class EmployeesAddForm extends Component <EmployeesFormPropsType, EmployeesAddFormStateType> {\r\n\r\n    constructor(props: EmployeesFormPropsType) {\r\n        super(props)\r\n        this.state = {\r\n            inputNameValue: '',\r\n            inputSalaryValue: ''\r\n        }\r\n    }\r\n\r\n    onSetInputNameValue = (e: FormEvent<HTMLInputElement>) => {\r\n        this.setState({inputNameValue: e.currentTarget.value})\r\n\r\n    }\r\n    onSetInputSalaryValue = (e: React.FormEvent<HTMLInputElement>) => {\r\n        this.setState({inputSalaryValue: e.currentTarget.value})\r\n    }\r\n\r\n    onAddNewEmployees = () => {\r\n        const {onAddEmployees} = this.props\r\n        const {inputNameValue, inputSalaryValue} = this.state\r\n        onAddEmployees(inputNameValue, inputSalaryValue)\r\n        this.setState({inputNameValue: '', inputSalaryValue: ''})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {inputNameValue, inputSalaryValue} = this.state\r\n\r\n        return (\r\n            <div className=\"app-add-form\">\r\n                <h3>Добавьте нового сотрудника</h3>\r\n                <form\r\n                    className=\"add-form d-flex\">\r\n                    <input type=\"text\"\r\n                           className=\"form-control new-post-label\"\r\n                           placeholder=\"Как его зовут?\"\r\n                           value={inputNameValue}\r\n                           onChange={this.onSetInputNameValue}/>\r\n                    <input type=\"number\"\r\n                           className=\"form-control new-post-label\"\r\n                           placeholder=\"З/П в $?\"\r\n                           value={inputSalaryValue}\r\n                           onChange={this.onSetInputSalaryValue}/>\r\n\r\n                    <button disabled={inputNameValue === '' || inputSalaryValue === ''} onClick={this.onAddNewEmployees}\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-light\">Добавить\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\nimport {AppInfo} from '../AppInfo/AppInfo';\nimport s from './app.module.css';\nimport {SearchPanel} from '../SearchPanel/SearchPanel';\nimport {AppFilter} from '../AppFilter/AppFilter';\nimport {EmployeesList} from '../EmployeesList/EmployeesList';\nimport {EmployeesAddForm} from '../EmployeesAddForm/EmployeesAddForm';\n\n\nexport type StateDataType = {\n    name: string\n    salary: string\n    id: string\n    isIncrease: boolean\n    forRaising: boolean\n}\nexport type TogglePropType = 'isIncrease' | 'forRaising'\n\nexport type FilterUsersType = 'forIncrease' | 'withBigSalary' | 'none'\n\n\nconst {app, searchPanel,alertMsg} = s\n\n\nclass App extends React.Component<{}, { data: StateDataType[], searchText: string, filter: FilterUsersType }> {\n\n    id = () => 'id' + Math.random().toString(16).slice(2)\n\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            data: [{id: this.id(), name: 'Denis', salary: '800', isIncrease: false, forRaising: false},\n                {id: this.id(), name: 'Oleg', salary: '1200', isIncrease: false, forRaising: false},\n                {id: this.id(), name: 'Polina', salary: '930', isIncrease: false, forRaising: false},\n                {id: this.id(), name: 'Ivan', salary: '1230', isIncrease: false, forRaising: false}\n            ],\n            searchText: '',\n            filter: 'none' as const\n        }\n\n    }\n\n    onDeleteEmployees = (EmployeesId: string) => {\n        this.setState(({data}) => ({data: data.filter(t => t.id !== EmployeesId)}))\n    }\n    onAddEmployees = (name: string, salary: string) => {\n        const newEmployers = {id: this.id(), name, salary, isIncrease: false, forRaising: false}\n        this.setState(({data}) => ({data: [...data, newEmployers]}))\n    }\n    onSetPropHandler = (id: string, prop: TogglePropType) => {\n        this.setState(({data}) => ({data: data.map(t => t.id === id ? {...t, [prop]: !t[prop]} : t)}))\n    }\n\n    onSearchUserHandler = (searchText: string, data: StateDataType[] = this.state.data) => {\n        if (searchText === '') {\n            return data\n        }\n        return data.filter(t => t.name.indexOf(searchText) !== -1)\n    }\n    onFilterUserHandler = (filter: FilterUsersType, data: StateDataType[] = this.state.data) => {\n        switch (filter) {\n            case 'none':\n                return data\n            case 'forIncrease':\n                return data.filter(t => t.isIncrease)\n            case 'withBigSalary':\n                return data.filter(t => Number(t.salary) > 1000)\n            default:\n                return data\n        }\n    }\n\n    onSetFilter = (newFilter: FilterUsersType) => {\n        this.setState((state) => ({...state, filter: newFilter}))\n    }\n\n\n    onSetSearchText = (newText: string) => {\n        this.setState((state) => ({...state, searchText: newText}))\n    }\n\n\n    onSalaryChange=(newSalary:string,id:string)=>{\n        this.setState(({data})=>({data:data.map(t=>t.id===id?{...t,salary: newSalary}:t)}))\n\n    }\n\n    render() {\n\n        const {data, searchText, filter} = this.state\n        const widget = {\n            currentEmployees: data.length,\n            forIncrease: data.filter(t => t.isIncrease).length\n        }\n        const searchData = this.onSearchUserHandler(searchText)\n        const afterFilter = this.onFilterUserHandler(filter, searchData)\n\n\n        const tableView = afterFilter.length === 0 ? <div className={alertMsg}>No one user</div> :\n            <EmployeesList onSalaryChange={this.onSalaryChange}\n                           onSetPropHandler={this.onSetPropHandler}\n                           onDeleteEmployees={this.onDeleteEmployees}\n                           data={afterFilter}/>\n\n\n        return (\n            <div className={app}>\n                <AppInfo widget={widget}/>\n\n                <div className={searchPanel}>\n                    <SearchPanel searchText={searchText} onSetSearchText={this.onSetSearchText}/>\n                    <AppFilter filter={filter} onSetFilter={this.onSetFilter}/>\n                </div>\n                {tableView}\n                <EmployeesAddForm onAddEmployees={this.onAddEmployees}/>\n\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <React.StrictMode>\n    <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}